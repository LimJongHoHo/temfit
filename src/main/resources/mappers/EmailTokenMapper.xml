<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.limbin.temfit.mappers.EmailTokenMapper">
    <insert id="insert">
        INSERT INTO `temfit`.`email_tokens` (`email`, `code`, `salt`, `user_agent`, `is_used`, `created_at`, `expired_at`)
        VALUES (#{emailToken.email}, #{emailToken.code}, #{emailToken.salt}, #{emailToken.userAgent},
                #{emailToken.isUsed}, #{emailToken.createdAt}, #{emailToken.expiredAt})
    </insert>

    <select id="selectByEmailAndCodeAndSalt"
            resultType="kr.co.limbin.temfit.entities.EmailTokenEntity">
        SELECT `email`      AS `email`,
               `code`       AS `code`,
               `salt`       AS `salt`,
               `user_agent` AS `userAgent`,
               `is_used`    AS `isUsed`,
               `created_at` AS `createdAt`,
               `expired_at` AS `expiredAt`
        FROM `temfit`.`email_tokens`
        WHERE `email` = #{email}
          AND `code` = #{code}
          AND `salt` = #{salt}
        LIMIT 1
    </select>

    <update id="update">
        UPDATE `temfit`.`email_tokens`
        SET `user_agent` = #{emailToken.userAgent},
            `is_used`    = #{emailToken.isUsed},
            `created_at` = #{emailToken.createdAt},
            `expired_at` = #{emailToken.expiredAt}
        WHERE `email` = #{emailToken.email}
          AND `code` = #{emailToken.code}
          AND `salt` = #{emailToken.salt}
        LIMIT 1
    </update>
</mapper>